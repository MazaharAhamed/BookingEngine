@page "/Room/{id}"
@model CheckOutModel
@using Microsoft.AspNetCore.Mvc.RazorPages;
@using BookingEngine.Models;
@using Microsoft.EntityFrameworkCore;
@using System.Globalization;
@{
    ViewData["Title"] = "CheckOut";
}
<html>
<head>
    <h6>Please provide Guest and Payment Info to complete booking.</h6>
    <style>
        input, label {
            display: block;
        }

        select {
            width: 200px;
            height: 30px;
            margin-right: 20px;
        }

        .nextDiv {
            position: absolute;
            top: 100px;
            right: 350px;
        }

        .a {
            box-shadow: inset 0 0 10px #0d0d0d;
            padding: 20px;
            padding-left: 40px;
            height: 550px;
        }

        .b {
            box-shadow: inset 0 0 10px #0d0d0d;
            padding: 20px;
            padding-left: 40px;
            margin-top: 50px;
        }

        span {
            display: inline-block;
            font-size: 10px;
        }
    </style>
</head>
<body>
    @{var us = CultureInfo.GetCultureInfo("en-US");}
    <br />
    <form method="post">
        <div style="text-align:left; width:500px;" class="a">
            <h6>Guest</h6>
            <div style="float:left; margin-right:20px;">
                <label asp-for="GuestInfo.FirstName">First Name</label>
                <input asp-for="GuestInfo.FirstName" />
                <span asp-validation-for="GuestInfo.FirstName" class="text-danger"></span>
            </div>
            <div style="float:left;">
                <label asp-for="GuestInfo.LastName">Last Name</label>
                <input asp-for="GuestInfo.LastName" />
                <span asp-validation-for="GuestInfo.LastName" class="text-danger"></span>
            </div>
            <div class="row pt-3 offset-sm-0" style="clear:both;">
                <div style="float:left; margin-right:20px;">
                    <label asp-for="GuestInfo.Email">Email Address</label>
                    <input asp-for="GuestInfo.Email" />
                    <span asp-validation-for="GuestInfo.Email" class="text-danger"></span>
                </div>
                <div style="float:left;">
                    <label asp-for="GuestInfo.PhoneNumber">Phone Number</label>
                    <input asp-for="GuestInfo.PhoneNumber" />
                    <span asp-validation-for="GuestInfo.PhoneNumber" class="text-danger"></span>
                </div>
            </div>
            <label class="pt-3" asp-for="GuestInfo.HomeAddress">Home Address</label>
            <input type="text" style="width:89%;" asp-for="GuestInfo.HomeAddress" />
            <span asp-validation-for="GuestInfo.HomeAddress" class="text-danger"></span>
            <label class="pt-3" asp-for="GuestInfo.AptName">Apt #, Suite, Etc</label>
            <input type="text" style="width:89%;" asp-for="GuestInfo.AptName" />
            <span asp-validation-for="GuestInfo.AptName" class="text-danger"></span>
            <br />
            <div class="pt-3" style="clear:both; float:left;">
                <label asp-for="GuestInfo.Country">Country</label>
                <select id="Country" asp-for="GuestInfo.Country">
                    <option disabled selected>Select Country</option>
                    <option>United States</option>
                    <option>India</option>
                </select><br />
                <span asp-validation-for="GuestInfo.Country" class="text-danger"></span>
            </div>
            <div class="pt-3" style="float:left;">
                <label asp-for="GuestInfo.ZipCode">Zip Code</label>
                <input style="width:93%;" asp-for="GuestInfo.ZipCode" />
                <span asp-validation-for="GuestInfo.ZipCode" class="text-danger"></span>
            </div>
        </div>
        <div style="text-align:left; clear:both; width:500px;" class="b">
            <h6 style="padding-top:5px;">Payment Info</h6>
            <div style="float:left; margin-right:20px;">
                <label asp-for="PaymentInfo.CreditCard">Credit Card #</label>
                <input asp-for="PaymentInfo.CreditCard" />
                <span asp-validation-for="PaymentInfo.CreditCard" class="text-danger"></span>
            </div>
            <div style="float:left;">
                <label asp-for="PaymentInfo.ExpDate">Exp. Date (MM/YY)</label>
                <input asp-for="PaymentInfo.ExpDate" />
                <span asp-validation-for="PaymentInfo.ExpDate" class="text-danger"></span>
            </div>
            <div class="row pt-3 offset-sm-0" style="clear:both;">
                <div style="float:left; margin-right:20px;">
                    <label asp-for="PaymentInfo.FullNameOnCard">Full Name On Card</label>
                    <input asp-for="PaymentInfo.FullNameOnCard" />
                    <span asp-validation-for="PaymentInfo.FullNameOnCard" class="text-danger"></span>
                </div>
                <div style="float:left;">
                    <label asp-for="PaymentInfo.Cvv">CVV</label>
                    <input asp-for="PaymentInfo.Cvv" />
                    <span asp-validation-for="PaymentInfo.Cvv" class="text-danger"></span>
                </div>
            </div>
        </div>
        <div class="nextDiv b">
            @if (Model.ResDetails != null)
            {
                Model.RoomId = Convert.ToInt32(RouteData.Values["id"]) - 1;
                var stay = Model.Room.ElementAt(Model.RoomId).RoomCost * Model.ResDetails.Value;
                var taxes = stay * 0.19;
                var totalcost = stay + taxes;
                var deposit = totalcost * 0.19;
                <h6>Kemble Inn</h6>
                @Html.DisplayFor(m => m.RDetails.RoomName)<br />
                @Html.DisplayFor(item => item.Reservation.Last().CheckIn) <p style="display:inline-block;"> - </p> @Html.DisplayFor(item => item.Reservation.Last().CheckOut)
                <label style="clear:both"></label>
                <label>Guests</label>
                @Html.DisplayFor(item => item.Reservation.LastOrDefault().Adults) <p style="display:inline-block;"> Adults</p>
                <label style="clear:both"></label>
                <label>@Model.ResDetails.Value Nights Stay &ensp; &ensp; @stay.ToString("C", us)</label>
                <label>Taxes &emsp; &emsp; &emsp; &emsp; +@taxes.ToString("C", us)</label>
                <label>Subtotal&ensp; &emsp; &emsp; &emsp;@totalcost.ToString("C", us)</label>
                <label>Deposit Due &emsp; &emsp;@deposit.ToString("C", us)</label>
                <br />
                <p style="font-size:12px;">Note that payments will be processed in USD</p>
                @Html.CheckBox("Allow", true)
                <p style="font-size:10px;">I have reviewed and agreed to the trip summary<br /> and policies,as well as any<br /> charges that may occur.</p>
                <center><input type="submit" class="btn btn-primary" asp-route-id="@Model.Rid" value="Book Stay" /></center>
            }
    </form>
    </div>
</body>
</html>
@functions{
    public class CheckOutModel : PageModel
    {
        private ApplicationDbContext _db;

        public CheckOutModel(ApplicationDbContext context)
        {
            _db = context;
        }

        [BindProperty]
        public GuestInfo GuestInfo { get; set; }

        [BindProperty]
        public PaymentInfo PaymentInfo { get; set; }

        [BindProperty]
        public IEnumerable<Reservation> Reservation { get; set; }

        public IEnumerable<Room> Room { get; private set; }

        [BindProperty]
        public Booking Booking { get; set; }

        [BindProperty]
        public IEnumerable<Booking> Book { get; set; }

        public Room RDetails { get; set; }

        public int RoomId { get; set; }

        public int Rid { get; set; }

        public double? ResDetails { get; set; }

        public string disp { get; set; }

        public void OnGet(int id)
        {
            Room = _db.Rooms.ToList();
            Reservation = _db.Reservations.ToList();
            Book = _db.Bookings.ToList();
            RDetails = GetRoom(id);
            Rid = id;
            if (GetReservation() == null)
            {
                disp = "no reservation found";
            }
            else
            {
                ResDetails = GetReservation();
            }
        }

        public Room GetRoom(int id = 1)
        {
            return _db.Rooms.FirstOrDefault(r => r.RoomId == id);
        }

        public double? GetReservation()
        {
            return (_db.Reservations.OrderBy(r => r.ReservationId).Select(r => r.CheckOut).LastOrDefault() - _db.Reservations.OrderBy(r => r.ReservationId).Select(r => r.CheckIn).LastOrDefault()).TotalDays;
        }

        public IActionResult OnPost(int id)
        {
            //Rid = id;
            int bRoomId = id;
            Rid = id;
            int bReservationId = _db.Reservations.OrderBy(r => r.ReservationId).Select(r => r.ReservationId).LastOrDefault();
            if (ModelState.IsValid)
            {
                _db.GuestInfo.Add(GuestInfo);
                _db.SaveChanges();
                int bGuestId = _db.GuestInfo.OrderBy(g => g.GuestId).Select(g => g.GuestId).LastOrDefault();
                PaymentInfo pi = new PaymentInfo();
                pi.GuestId = bGuestId;
                pi.CreditCard = PaymentInfo.CreditCard;
                pi.ExpDate = PaymentInfo.ExpDate;
                pi.FullNameOnCard = PaymentInfo.FullNameOnCard;
                pi.Cvv = PaymentInfo.Cvv;
                _db.PaymentInfo.Add(pi);
                var bCheckIn = _db.Reservations.Find(bReservationId).CheckIn;
                var bCheckOut = _db.Reservations.Find(bReservationId).CheckOut;
                foreach (var item in _db.Bookings)
                {
                    if (_db.Reservations.Find(item.ReservationId).CheckIn == bCheckIn && _db.Reservations.Find(item.ReservationId).CheckOut == bCheckOut)
                    {
                        if (_db.Bookings.Any(x => x.RoomId == bRoomId))
                        {
                            return RedirectToPage("Error");
                        }
                    }
                }
                //CheckAvailability();
                Booking bk = new Booking();
                bk.RoomId = bRoomId;
                bk.ReservationId = bReservationId;
                bk.GuestId = bGuestId;
                _db.Bookings.Add(bk);
                _db.SaveChanges();
                return RedirectToPage($"Success", new { id });
            }
            else
            {
                return Page();
            }
        }

        //public IActionResult CheckAvailability()
        //{
        //    int bReservationId = _db.Reservations.OrderBy(r => r.ReservationId).Select(r => r.ReservationId).LastOrDefault();
        //    int bRoomId = Rid;
        //    var bCheckIn = _db.Reservations.Find(bReservationId).CheckIn;
        //    var bCheckOut = _db.Reservations.Find(bReservationId).CheckOut;
        //    foreach (var item in _db.Bookings)
        //    {
        //        if (_db.Reservations.Find(item.ReservationId).CheckIn == bCheckIn && _db.Reservations.Find(item.ReservationId).CheckOut == bCheckOut)
        //        {
        //            if (_db.Bookings.Any(x => x.RoomId == bRoomId))
        //            {
        //                return RedirectToPage("Error");
        //            }
        //        }
        //    }
        //    return new EmptyResult();
        //}
    }
}
@section Scripts{
    <partial name="_ValidationScriptsPartial" />
}